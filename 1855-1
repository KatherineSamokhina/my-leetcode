class Solution {
public:
    int BinarySearch_down(const vector<int>& v, int t, int left = 0) {
        if(left >= v.size())
            return -1;
        int right = v.size() - 1;
        while(left < right){
            int mid = left + (right - left) / 2;
            if(v[mid] < t) 
                right = mid;
            else
                left = mid + 1;
        }
        if(v[left] < t) --left;
        return left;
    }

    int maxDistance(vector<int>& nums1, vector<int>& nums2) {
        int ans = 0;
        for(int i = 0; i < nums1.size(); i++) {
            int idx = BinarySearch_down(nums2, nums1[i], i);
            if(idx < i) 
                continue;
            ans = max(idx - i, ans);
        }
        return ans;
    }
};
